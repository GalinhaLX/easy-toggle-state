/*! easy-toggle-state v1.8.1 | (c) 2018 Matthieu Bu√© <https://twikito.com> | MIT License | https://twikito.github.io/easy-toggle-state/ */
!function(){"use strict";function t(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function e(t){return function(t){if(Array.isArray(t)){for(var e=0,r=new Array(t.length);e<t.length;e++)r[e]=t[e];return r}}(t)||function(t){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t))return Array.from(t)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var r=document.documentElement.getAttribute("data-easy-toggle-state-custom-prefix")||"toggle",n=function(t){return["data",arguments.length>1&&void 0!==arguments[1]?arguments[1]:r,t].filter(Boolean).join("-")},i=n("class"),o=n("escape"),a=n("event"),c=n("group"),u=n("is-active"),s=n("outside"),g=n("radio-group"),l=n("target"),f=n("target-all"),A=n("target-next"),h=n("target-only"),d=n("target-parent"),v=n("target-previous"),b=n("target-self"),E=n("state"),m=n("trigger-off"),p=new Event("toggleAfter"),T=new Event("toggleBefore"),y=function(t,r){var n=t?"[".concat(t,"]"):"";return e(r?r.querySelectorAll(n):document.querySelectorAll("[".concat(i,"]").concat(n).trim()))},w=function(t,e){return t.dispatchEvent(e)},L=function(e){var r,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:(t(r={},"aria-checked",e.isToggleActive),t(r,"aria-expanded",e.isToggleActive),t(r,"aria-hidden",!e.isToggleActive),t(r,"aria-selected",e.isToggleActive),r);return Object.keys(n).forEach(function(t){return e.hasAttribute(t)&&e.setAttribute(t,n[t])})},k=function(t){var e=t.hasAttribute(c)?c:g;return y("".concat(e,'="').concat(t.getAttribute(e),'"')).filter(function(t){return t.isToggleActive})},S=function(t,r){if(0===r.length)return console.warn("There's no match for the selector '".concat(t,"' for this trigger")),[];var n=t.match(/#\w+/gi);return n&&n.forEach(function(t){var n=e(r).filter(function(e){return e.id===t.slice(1)});n.length>1&&console.warn("There's ".concat(n.length," matches for the selector '").concat(t,"' for this trigger"))}),e(r)},x=function t(e){var r=e.target;r.closest("["+E+'="true"]')||(y(s).forEach(function(t){t!==r&&t.isToggleActive&&(t.hasAttribute(c)||t.hasAttribute(g)?C:B)(t)}),r.hasAttribute(s)&&r.isToggleActive&&document.addEventListener(r.getAttribute(a)||"click",t,!1))},O=function(t){return B(t.target.targetElement)},j=function(t){if(t.hasAttribute(s))return t.hasAttribute(g)?console.warn("You can't use '".concat(s,"' on a radio grouped trigger")):t.isToggleActive?document.addEventListener(t.getAttribute(a)||"click",x,!1):document.removeEventListener(t.getAttribute(a)||"click",x,!1)},q=function(t,e,r){return function(t){if(t.hasAttribute(l)||t.hasAttribute(f)){var e=t.getAttribute(l)||t.getAttribute(f);return S(e,document.querySelectorAll(e))}if(t.hasAttribute(d)){var r=t.getAttribute(d);return S(r,t.parentElement.querySelectorAll(r))}if(t.hasAttribute(b)){var n=t.getAttribute(b);return S(n,t.querySelectorAll(n))}return t.hasAttribute(v)?S("previous",[t.previousElementSibling].filter(Boolean)):t.hasAttribute(A)?S("next",[t.nextElementSibling].filter(Boolean)):[]}(t).forEach(function(n){w(n,T),n.isToggleActive=!n.isToggleActive,L(n),r&&!n.classList.contains(e)&&n.classList.add(e),r||n.classList.toggle(e),t.hasAttribute(s)&&n.setAttribute(E,t.isToggleActive),w(n,p),function(t,e){var r=y(m,t);if(0!==r.length)e.isToggleActive?r.forEach(function(t){t.targetElement=e,t.addEventListener("click",O,!1)}):r.forEach(function(t){t.removeEventListener("click",O,!1)})}(n,t)})},B=function(t){w(t,T);var e=t.getAttribute(i)||"is-active";return t.isToggleActive=!t.isToggleActive,L(t),t.hasAttribute(h)||t.classList.toggle(e),w(t,p),q(t,e,!1),j(t)},D=function(e){var r;w(e,T);var n=e.getAttribute(i)||"is-active";return e.isToggleActive=!0,L(e,(t(r={},"aria-checked",!0),t(r,"aria-expanded",!0),t(r,"aria-hidden",!1),t(r,"aria-selected",!0),r)),e.hasAttribute(h)||e.classList.contains(n)||e.classList.add(n),w(e,p),q(e,n,!0),j(e)},C=function(t){var e=k(t);return 0===e.length?B(t):-1===e.indexOf(t)?(e.forEach(B),B(t)):-1===e.indexOf(t)||t.hasAttribute(g)?void 0:B(t)},M=function(){if(0===y().length)return console.warn("Easy Toggle State is not used: there's no trigger with '".concat(i,"' attribute to initialize."));y(u).forEach(function(t){return(t.hasAttribute(c)||t.hasAttribute(g))&&k(t).length>0?console.warn("Toggle group '".concat(t.getAttribute(c)||t.getAttribute(g),"' must not have more than one trigger with '").concat(u,"'")):D(t)}),y().forEach(function(t){t.addEventListener(t.getAttribute(a)||"click",function(e){e.preventDefault(),(t.hasAttribute(c)||t.hasAttribute(g)?C:B)(t)},!1)});var t=y(o);t.length>0&&document.addEventListener("keyup",function(e){"Escape"!==e.key&&"Esc"!==e.key||t.forEach(function(t){if(t.isToggleActive)return t.hasAttribute(g)?console.warn("You can't use '".concat(o,"' on a radio grouped trigger")):(t.hasAttribute(c)?C:B)(t)})},!1)};document.addEventListener("DOMContentLoaded",function t(){M(),document.removeEventListener("DOMContentLoaded",t)}),window.initEasyToggleState=M}();
